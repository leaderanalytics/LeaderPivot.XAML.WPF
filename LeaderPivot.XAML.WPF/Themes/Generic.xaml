<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
    xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:controls="clr-namespace:System.Windows.Controls"
    xmlns:local="clr-namespace:LeaderAnalytics.LeaderPivot.XAML.WPF"
    xmlns:converters="clr-namespace:LeaderAnalytics.LeaderPivot.XAML.WPF.Converters">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:BoolToStretchConverter x:Key="BoolToStretchConverter"/>
    <converters:SelectedItemConverter x:Key="SelectedItemConverter" />
    <converters:NegateConverter x:Key="NegateConverter"/>
    <converters:DimensionEventArgsConverter x:Key="DimensionEventArgsConverter"/>
    <converters:DimensionEventCheckedConverter x:Key="DimensionEventCheckedConverter"/>
    <converters:DimensionEventEnabledConverter x:Key="DimensionEventEnabledConverter"/>
    <converters:DimensionActionDescriptionConverter x:Key="DimensionActionDescriptionConverter"/>
    
    <DataTemplate x:Key="DimensionButtonItemTemplate">
        <Border Padding="0,4,0,4" HorizontalAlignment="Left" VerticalAlignment="Center">
            <CheckBox HorizontalAlignment="Left" VerticalAlignment="Center" 
                Content="{Binding Converter={StaticResource DimensionActionDescriptionConverter}}" 
                Command="{Binding RelativeSource={RelativeSource AncestorType=local:LeaderPivotControl}, Path=DimensionEventCommand}">
                <CheckBox.IsEnabled>
                    <MultiBinding Converter="{StaticResource DimensionEventEnabledConverter}">
                        <Binding Path="." />
                        <Binding RelativeSource="{RelativeSource AncestorType=local:DimensionContainerCell}" Path="." />
                    </MultiBinding>
                </CheckBox.IsEnabled>
                <CheckBox.IsChecked>
                    <MultiBinding Converter="{StaticResource DimensionEventCheckedConverter}">
                        <Binding RelativeSource="{RelativeSource AncestorType=local:DimensionButton}" Path="Dimension" />
                        <Binding Path="." />
                    </MultiBinding>
                </CheckBox.IsChecked>
                <CheckBox.CommandParameter>
                    <MultiBinding Converter="{StaticResource DimensionEventArgsConverter}">
                        <Binding RelativeSource="{RelativeSource AncestorType=local:DimensionButton}" Path="Dimension" />
                        <Binding Path="." />
                    </MultiBinding>
                </CheckBox.CommandParameter>
            </CheckBox>
        </Border>
    </DataTemplate>
    
    <Style TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>

    <Style TargetType="local:DropDownButton" x:Key="DropDownButtonStyle">
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="0,0,6,0" />
    </Style>
        
    <Style TargetType="Button" x:Key="ReloadButtonStyle">
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="4"/>
    </Style>
    
    <Style TargetType="{x:Type local:LeaderPivotControl}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LeaderPivotControl}" >
                    
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:LeaderPivotControl}}" >

                        <ScrollViewer x:Name="ContentScrollViewer">

                            <Viewbox Stretch="{Binding UseResponsiveSizing, Converter={StaticResource BoolToStretchConverter}}" >
                                <Grid x:Name="PART_Grid"  ></Grid> <!--MaxWidth="1200"-->
                            </Viewbox>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:Cell}"  x:Key="cellStyle">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Cell }">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:LeaderPivotControl}}">
                        <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=local:Cell}, Path=Content}" Padding="{Binding CellPadding}" FontSize="{Binding FontSize}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value=".5"/>
    </Style>
    
    <Style TargetType="{x:Type local:BaseTotalCell}" BasedOn="{StaticResource cellStyle}" x:Key="totalCellStyle">
        <Setter Property="Background" Value="Gainsboro"/>

        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Padding" Value="6"/>
                <Setter Property="TextAlignment" Value="Right"/>
                <Setter Property="TextWrapping" Value="NoWrap"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type local:GroupHeaderCell}" BasedOn="{StaticResource cellStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Cell }">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:LeaderPivotControl}}">
                        <StackPanel Orientation="Horizontal">
                            
                            <Button 
                                DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:GroupHeaderCell}}"
                                Command="{Binding ToggleNodeExpansionCommand}" 
                                CommandParameter="{Binding NodeID}"
                                Visibility="{Binding CanToggleExpansion, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="45"/>
                                    </Style>
                                    <Style TargetType="Button">
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Height" Value="25"/>
                                        <Setter Property="Width" Value="25"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="VerticalAlignment" Value="top"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                                        
                                        <Setter Property="FontSize" Value="12"/>
                                        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                                        <Setter Property="Margin" Value="3"/>
                                       
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                <Setter Property="Padding" Value="5,7,5,3"/>
                                                <Setter Property="Content" Value="&#xE936;"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                                                <Setter Property="Padding" Value="9,4,1,6"/>
                                                <Setter Property="Content" Value="&#xE937;"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Resources>
                            </Button>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=local:Cell}, Path=Content}" Padding="{Binding CellPadding}" FontSize="{Binding FontSize}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:GrandTotalHeaderCell }"  BasedOn="{StaticResource totalCellStyle}">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Padding" Value="6"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>
        </Style.Resources>
    </Style>
    
    <Style TargetType="{x:Type local:GrandTotalCell }"  BasedOn="{StaticResource totalCellStyle}">
        
    </Style>
    
    <Style TargetType="{x:Type local:MeasureCell }"  BasedOn="{StaticResource cellStyle}">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Padding" Value="6"/>
                <Setter Property="TextAlignment" Value="Right"/>
                <Setter Property="TextWrapping" Value="NoWrap"/>
            </Style>
        </Style.Resources>
    </Style>
    
    <Style TargetType="{x:Type local:MeasureLabelCell }"  BasedOn="{StaticResource cellStyle}">
        
    </Style>
    
    <Style TargetType="{x:Type local:MeasureTotalLabelCell }"  BasedOn="{StaticResource totalCellStyle}">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Padding" Value="6"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>
        </Style.Resources>
    </Style>
    
    <Style TargetType="{x:Type local:TotalCell }"  BasedOn="{StaticResource totalCellStyle}">
        
    </Style>
    
    <Style TargetType="{x:Type local:TotalHeaderCell }"  BasedOn="{StaticResource totalCellStyle}">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Padding" Value="6"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>
        </Style.Resources>
    </Style>
    
    <Style TargetType="{x:Type local:DimensionContainerCell }"  BasedOn="{StaticResource cellStyle}">
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DimensionContainerCell}" >
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:LeaderPivotControl}}">
                        
                        <ScrollViewer Visibility="{Binding DisplayDimensionButtons, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left">
                            <ItemsControl Name="DimensionItems" 
                                          ItemsSource="{TemplateBinding Dimensions}"  
                                          dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}" 
                                          dd:DragDrop.UseDefaultDragAdorner="True"  >
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <local:DimensionButton Content="{Binding DisplayValue}" Dimension="{Binding}">
                                        </local:DimensionButton>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" ></StackPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:MeasureContainerCell }"  BasedOn="{StaticResource cellStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MeasureContainerCell}" >
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="6"
                            DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:LeaderPivotControl}}">
                        <ScrollViewer x:Name="ContentScrollViewer">
                            <Grid x:Name="PART_Grid">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Button Content="Reload Data" 
                                        Style="{StaticResource ReloadButtonStyle}"
                                        Command="{Binding ReloadDataCommand}" 
                                        Visibility="{Binding DisplayReloadDataButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <ItemsControl ItemsSource="{Binding ViewBuilder.Measures}" Grid.Row="1" Margin="3,10,0,0"
                                              Visibility="{Binding DisplayMeasureSelectors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox Content="{Binding DisplayValue}" IsChecked="{Binding IsEnabled}" Command="{Binding RelativeSource={RelativeSource AncestorType=local:LeaderPivotControl}, Path=ReloadDataCommand}" Padding="2" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <CheckBox Content="Grand Totals" Margin="3,0,0,0"
                                          IsChecked="{Binding ViewBuilder.DisplayGrandTotals}" Command="{Binding ReloadDataCommand}" Padding="2" 
                                          Visibility="{Binding DisplayGrandTotalOption, Converter={StaticResource BooleanToVisibilityConverter}}"
                                          Grid.Row="2" />
                                
                                <local:DimensionContainerCell BorderThickness="0" Margin="0,3,0,0"
                                    IsRows="True" 
                                    Dimensions="{Binding ViewBuilder.RowDimensions}" 
                                    Grid.Row="3"/>

                                <ComboBox Grid.Row="4" Margin="0,6,0,0" x:Name="HiddenDimensionsComboBox"
                                          Text="Hidden Dimensions" 
                                          IsReadOnly="True" IsEditable="True"
                                          DisplayMemberPath="DisplayValue"
                                          Visibility="{Binding ViewBuilder.HiddenDimensionsVisibility}"
                                          ItemsSource="{Binding ViewBuilder.HiddenDimensions}"
                                          SelectedItem="{x:Null}">
                                    <Behaviors:Interaction.Triggers>
                                        <Behaviors:EventTrigger EventName="SelectionChanged">
                                            <Behaviors:InvokeCommandAction Command="{Binding DimensionEventCommand}">
                                                <Behaviors:InvokeCommandAction.CommandParameter>
                                                    <MultiBinding Converter="{StaticResource DimensionEventArgsConverter}">
                                                        <Binding ElementName="HiddenDimensionsComboBox" Path="SelectedItem" />
                                                        <Binding >
                                                            <Binding.Source>
                                                                <x:Static Member="local:DimensionAction.UnHide"/>
                                                            </Binding.Source>
                                                        </Binding>
                                                    </MultiBinding>
                                                </Behaviors:InvokeCommandAction.CommandParameter>
                                            </Behaviors:InvokeCommandAction>
                                        </Behaviors:EventTrigger>
                                    </Behaviors:Interaction.Triggers>
                                </ComboBox>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:DimensionButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DimensionButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:DimensionButton}}">
                        <local:DropDownButton
                            Content="{Binding Content}" 
                            ItemTemplate="{StaticResource DimensionButtonItemTemplate}"
                            Style="{StaticResource ResourceKey=DropDownButtonStyle}">
                            <local:DropDownButton.ButtonStyle>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Padding" Value="6"/>
                                </Style>
                            </local:DropDownButton.ButtonStyle>
                            <local:DropDownButton.ItemsSource>
                                <x:Array Type="{x:Type local:DimensionAction}">
                                    <x:Static Member="local:DimensionAction.SortAscending"/>
                                    <x:Static Member="local:DimensionAction.SortDescending"/>
                                    <x:Static Member="local:DimensionAction.Hide"/>
                                </x:Array>
                            </local:DropDownButton.ItemsSource>
                        </local:DropDownButton>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="local:DropDownButton">
        <Setter Property="ButtonStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Padding" Value="3"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DropDownButton }">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:DropDownButton}}">
                        <Behaviors:Interaction.Triggers>
                            <Behaviors:EventTrigger EventName="MouseLeave">
                                <Behaviors:InvokeCommandAction Command="{Binding MouseLeaveCommand}"/>
                            </Behaviors:EventTrigger>
                        </Behaviors:Interaction.Triggers>
                        <StackPanel Orientation="Vertical">
                            <Button x:Name="MartyMcButton" Content="{Binding Content}" Command="{Binding ToggleDropDownCommand}" Style="{TemplateBinding ButtonStyle}"></Button>
                            <Popup IsOpen="{Binding IsDropDownOpen}" PlacementTarget="{Binding ElementName=MartyMcButton}" Placement="Bottom" AllowsTransparency="True" >
                                <Border  Margin="0,0,8,8" >
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
                                    </Border.Effect>
                                    <ListBox ItemsSource="{Binding ItemsSource}" SelectedItem="{Binding SelectedItem}" ItemTemplate="{Binding ItemTemplate}" >
                                        <Behaviors:Interaction.Triggers>
                                            <Behaviors:EventTrigger EventName="SelectionChanged">
                                                <Behaviors:InvokeCommandAction Command="{Binding SelectionChangedCommand}"/>
                                            </Behaviors:EventTrigger>
                                        </Behaviors:Interaction.Triggers>
                                    </ListBox>
                                </Border>
                            </Popup>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
